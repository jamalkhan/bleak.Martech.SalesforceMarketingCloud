name: Build & Package SfmcApp for macOS (.NET 9, arm64 & x64)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-mac:
    runs-on: macos-15
    steps:
      - name: Check Xcode version
        run: xcodebuild -version

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install MAUI workload
        run: dotnet workload install maui

      - name: Auto-increment version number (only on workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        id: versioning
        run: |
          FILE="SfmcApp/SfmcApp.csproj"
          CURRENT_VERSION=$(xmllint --xpath "string(//Project/PropertyGroup[Version]/Version)" "$FILE" 2>/dev/null)

          if [ -z "$CURRENT_VERSION" ]; then
            echo "No <Version> tag found. Adding default 1.0.0"
            sed -i '' '/<PropertyGroup>/a\
            \  <Version>1.0.0</Version>' "$FILE"
            CURRENT_VERSION="1.0.0"
          fi

          echo "Current version: $CURRENT_VERSION"

          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          patch=$((patch + 1))
          NEW_VERSION="$major.$minor.$patch"
          echo "New version: $NEW_VERSION"

          # Replace version in .csproj
          sed -i '' "s|<Version>$CURRENT_VERSION</Version>|<Version>$NEW_VERSION</Version>|" "$FILE"

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit updated version (only on workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add SfmcApp/SfmcApp.csproj
          git commit -m "CI: Bump version to ${{ steps.versioning.outputs.version }} [skip ci]"
          git push

      - name: Restore dependencies
        run: dotnet restore SfmcApp/SfmcApp.csproj

      # Build ARM64
      - name: Build arm64
        run: dotnet publish SfmcApp/SfmcApp.csproj -c Release -f net9.0-maccatalyst -p:RuntimeIdentifier=maccatalyst-arm64 -o publish/arm64

      - name: Create arm64 DMG
        run: |
          VERSION=${{ steps.versioning.outputs.version || '0.0.0-CI' }}
          DMG_NAME="SfmcApp-macOS-arm64-${VERSION}.dmg"
          mkdir -p output
          hdiutil create -volname "SfmcApp Installer (arm64)" \
              -srcfolder "publish/arm64/SfmcApp.app" \
              -ov -format UDZO "output/$DMG_NAME"

      # Build x64
      - name: Build x64
        run: dotnet publish SfmcApp/SfmcApp.csproj -c Release -f net9.0-maccatalyst -p:RuntimeIdentifier=maccatalyst-x64 -o publish/x64

      - name: Create x64 DMG
        run: |
          VERSION=${{ steps.versioning.outputs.version || '0.0.0-CI' }}
          DMG_NAME="SfmcApp-macOS-x64-${VERSION}.dmg"
          mkdir -p output
          hdiutil create -volname "SfmcApp Installer (x64)" \
              -srcfolder "publish/x64/SfmcApp.app" \
              -ov -format UDZO "output/$DMG_NAME"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SfmcApp-DMGs
          path: output/*.dmg

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v2
        with:
          files: output/*.dmg
          tag_name: v${{ steps.versioning.outputs.version || '0.0.0-CI' }}
          name: "SfmcApp macOS v${{ steps.versioning.outputs.version || '0.0.0-CI' }}"
          draft: false
          prerelease: false
